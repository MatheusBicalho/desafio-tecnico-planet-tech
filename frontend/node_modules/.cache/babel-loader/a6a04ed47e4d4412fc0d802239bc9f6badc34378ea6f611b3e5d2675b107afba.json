{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\planet-tech-chat\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport * as api from '../services/api';\n\n// -----------------------------------------------------------------\n// FUNÇÕES DE LÓGICA EXPORTADAS (Prontas para Testes Unitários)\n// -----------------------------------------------------------------\n\n// Lógica para gerar uma cor determinística a partir de uma string (nome)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const stringToColor = str => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = hash >> i * 8 & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  // Ajuste para garantir cores escuras o suficiente para texto branco\n  const r = parseInt(color.substring(1, 3), 16);\n  const g = parseInt(color.substring(3, 5), 16);\n  const b = parseInt(color.substring(5, 7), 16);\n\n  // Calcula o brilho (luminância)\n  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n  if (luminance > 0.5) {\n    return `hsl(${hash % 360}, 60%, 30%)`; // Cor escura\n  }\n  return color; // Cor original\n};\n\n// Lógica para obter as iniciais\nexport const getInitials = sender => {\n  const parts = sender.toUpperCase().trim().split(/\\s+/);\n  if (parts.length === 1) {\n    return parts[0].substring(0, 2);\n  }\n  return parts[0][0] + parts[parts.length - 1][0];\n};\n\n// Agrupa mensagens por data (Hoje, Ontem, ou data formatada)\nexport const groupByDate = msgs => {\n  const grouped = {};\n  const today = new Date().toDateString();\n  const yesterday = new Date(Date.now() - 86400000).toDateString();\n  msgs.forEach(msg => {\n    const msgDate = new Date(msg.timestamp).toDateString();\n    let label;\n    if (msgDate === today) {\n      label = 'Hoje';\n    } else if (msgDate === yesterday) {\n      label = 'Ontem';\n    } else {\n      label = new Date(msg.timestamp).toLocaleDateString('pt-BR', {\n        day: 'numeric',\n        month: 'short'\n      });\n    }\n    if (!grouped[label]) {\n      grouped[label] = [];\n    }\n    grouped[label].push(msg);\n  });\n  return grouped;\n};\n// -----------------------------------------------------------------\n\nconst Chat = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [type, setType] = useState('text');\n  const [file, setFile] = useState(null);\n  const [charCount, setCharCount] = useState(0);\n  const [isSending, setIsSending] = useState(false);\n  const messagesEndRef = useRef(null);\n  const messagesListRef = useRef(null);\n  const inputRef = useRef(null); // CRÍTICO: Nova referência para o input\n\n  const {\n    user,\n    messages,\n    preview,\n    setPreview,\n    logout,\n    resetPreview,\n    addMessageLocally,\n    handleResetChat\n  } = useContext(AppContext);\n  const maxChars = 200;\n\n  // Atualiza contador de caracteres\n  useEffect(() => {\n    setCharCount(content.length);\n  }, [content]);\n\n  // Scroll automático para a última mensagem (SÓ SE O USUÁRIO ESTAVA PERTO DO FIM - POLIMENTO)\n  useEffect(() => {\n    const messagesList = messagesListRef.current;\n    if (messagesList) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = messagesList;\n      if (scrollTop + clientHeight >= scrollHeight - 100) {\n        var _messagesEndRef$curre;\n        (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [messages]);\n\n  // Formata timestamp para exibição (só hora:minuto)\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Renderiza o conteúdo da mensagem (texto, imagem ou áudio)\n  const renderContent = msg => {\n    switch (msg.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.content,\n          alt: \"Imagem enviada\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 24\n        }, this);\n      case 'audio':\n        return /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: msg.content,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tipo de mensagem n\\xE3o suportado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  // Manipula seleção de arquivo com preview e validação\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      const allowedTypes = ['image/jpeg', 'image/png', 'audio/mpeg', 'audio/wav'];\n      if (!allowedTypes.includes(selectedFile.type)) {\n        alert('Apenas imagens (jpg/png) ou áudio (mp3/wav) são permitidos.');\n        e.target.value = '';\n        return;\n      }\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n      setType(selectedFile.type.startsWith('image/') ? 'image' : 'audio');\n      setFile(selectedFile);\n    }\n  };\n\n  // Cancela preview de arquivo\n  const handleCancelPreview = () => {\n    var _inputRef$current;\n    if (preview) {\n      URL.revokeObjectURL(preview); // Libera memória\n    }\n    setPreview(null);\n    setFile(null);\n    setType('text');\n    setContent('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus(); // CRÍTICO: FOCA após cancelar preview\n  };\n\n  // Envia mensagem (texto ou arquivo)\n  const handleSend = async () => {\n    if (!content.trim() && !file || charCount > maxChars) {\n      alert('Mensagem inválida ou excede o limite de caracteres.');\n      return;\n    }\n    setIsSending(true); // LIGA O SPINNER\n\n    try {\n      var _inputRef$current2, _messagesEndRef$curre2;\n      let messageContent = content.trim();\n      let messageType = type;\n      if (file) {\n        const uploadResult = await api.uploadFile(file);\n        messageContent = uploadResult.url;\n        URL.revokeObjectURL(preview);\n        setFile(null);\n      }\n      const messageToSend = {\n        content: messageContent,\n        sender: user,\n        type: messageType,\n        timestamp: new Date().toISOString()\n      };\n      const sentMessage = await api.sendMessage(messageToSend);\n\n      // 1. Adiciona a mensagem localmente (Garante visibilidade imediata)\n      addMessageLocally(sentMessage);\n\n      // 2. Reseta estados\n      setContent('');\n      setType('text');\n      resetPreview();\n\n      // CRÍTICO: FORÇA O FOCO DE VOLTA PARA O INPUT\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n\n      // CRÍTICO: FORÇA O SCROLL AQUI APÓS O UPDATE LOCAL\n      (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      var _inputRef$current3;\n      console.error('Erro ao enviar mensagem:', error);\n      alert('Erro ao enviar mensagem. Tente novamente.');\n      (_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.focus(); // Tenta focar mesmo em caso de erro\n    } finally {\n      setIsSending(false); // DESLIGA O SPINNER\n    }\n  };\n\n  // Envio com Enter\n  const handleKeyPress = e => {\n    // Desabilita se estiver carregando\n    if (!isSending && e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // Agrupa as mensagens\n  const groupedMessages = groupByDate(messages);\n\n  // JSX principal do componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat - Bem-vindo, \", user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetChat,\n          \"aria-label\": \"Limpar hist\\xF3rico de mensagens\",\n          className: \"reset-btn\",\n          style: {\n            backgroundColor: '#dc3545',\n            color: 'white'\n          },\n          disabled: isSending // DESABILITA DURANTE O ENVIO\n          ,\n          children: \"Limpar Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          \"aria-label\": \"Sair do chat\",\n          disabled: isSending,\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesListRef,\n      className: \"messages-list\",\n      children: [Object.entries(groupedMessages).length > 0 ? Object.entries(groupedMessages).map(([date, msgs]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-group\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }, this), msgs.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar-wrapper ${msg.sender === user ? 'sent-wrapper' : 'received-wrapper'}`,\n          children: [msg.sender !== user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            style: {\n              backgroundColor: stringToColor(msg.sender)\n            },\n            children: getInitials(msg.sender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === user ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: msg.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 45\n              }, this), \" - \", formatTimestamp(msg.timestamp)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: renderContent(msg)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 37\n          }, this), msg.sender === user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar sent-avatar\",\n            style: {\n              backgroundColor: stringToColor(msg.sender)\n            },\n            children: getInitials(msg.sender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 41\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }, this))]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#666',\n          padding: '20px'\n        },\n        children: \"Nenhuma mensagem ainda. Envie a primeira!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"send-form\",\n      onSubmit: e => {\n        e.preventDefault();\n        handleSend();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef // CRÍTICO: Anexando a referência aqui\n        ,\n        value: content,\n        onChange: e => setContent(e.target.value),\n        onKeyDown: handleKeyPress,\n        className: \"text-input\",\n        placeholder: \"Digite sua mensagem... (m\\xE1x. 200 caracteres)\",\n        maxLength: maxChars,\n        \"aria-label\": \"Campo para digitar mensagem de texto\",\n        disabled: !!file || isSending // DESABILITA DURANTE O ENVIO\n        ,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char-counter\",\n        children: [charCount, \"/\", maxChars, \" \", charCount > maxChars / 2 && '(metade excedida)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg,image/png,audio/mpeg,audio/wav\",\n        onChange: handleFileChange,\n        className: \"file-input\",\n        \"aria-label\": \"Selecionar imagem ou \\xE1udio para enviar\",\n        disabled: isSending // DESABILITA DURANTE O ENVIO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: [type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Preview da imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelPreview,\n          className: \"send-btn\",\n          style: {\n            backgroundColor: '#dc3545',\n            marginTop: '5px'\n          },\n          \"aria-label\": \"Cancelar envio do arquivo\",\n          disabled: isSending // DESABILITA DURANTE O ENVIO\n          ,\n          children: \"Cancelar Arquivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-btn\",\n        disabled: !content.trim() && !file || isSending // DESABILITA SE ESTIVER CARREGANDO OU VAZIO\n        ,\n        \"aria-label\": \"Enviar mensagem ou arquivo\",\n        children: isSending ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this) // SPINNER SVG/CSS AQUI\n        : 'Enviar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"WUdUBLI3Y3GxCnxgiWa+TVmHq6E=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","AppContext","api","jsxDEV","_jsxDEV","stringToColor","str","hash","i","length","charCodeAt","color","value","toString","substr","r","parseInt","substring","g","b","luminance","getInitials","sender","parts","toUpperCase","trim","split","groupByDate","msgs","grouped","today","Date","toDateString","yesterday","now","forEach","msg","msgDate","timestamp","label","toLocaleDateString","day","month","push","Chat","_s","content","setContent","type","setType","file","setFile","charCount","setCharCount","isSending","setIsSending","messagesEndRef","messagesListRef","inputRef","user","messages","preview","setPreview","logout","resetPreview","addMessageLocally","handleResetChat","maxChars","messagesList","current","scrollTop","scrollHeight","clientHeight","_messagesEndRef$curre","scrollIntoView","behavior","formatTimestamp","toLocaleString","hour","minute","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","height","controls","width","handleFileChange","e","selectedFile","target","files","allowedTypes","includes","alert","previewUrl","URL","createObjectURL","startsWith","handleCancelPreview","_inputRef$current","revokeObjectURL","focus","handleSend","_inputRef$current2","_messagesEndRef$curre2","messageContent","messageType","uploadResult","uploadFile","url","messageToSend","toISOString","sentMessage","sendMessage","error","_inputRef$current3","console","handleKeyPress","key","shiftKey","preventDefault","groupedMessages","onClick","backgroundColor","disabled","ref","Object","entries","map","date","id","textAlign","padding","onSubmit","onChange","onKeyDown","placeholder","maxLength","rows","accept","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/mathe/planet-tech-chat/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\nimport * as api from '../services/api';\r\n\r\n// -----------------------------------------------------------------\r\n// FUNÇÕES DE LÓGICA EXPORTADAS (Prontas para Testes Unitários)\r\n// -----------------------------------------------------------------\r\n\r\n// Lógica para gerar uma cor determinística a partir de uma string (nome)\r\nexport const stringToColor = (str) => {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    let color = '#';\r\n    for (let i = 0; i < 3; i++) {\r\n        const value = (hash >> (i * 8)) & 0xFF;\r\n        color += ('00' + value.toString(16)).substr(-2);\r\n    }\r\n    \r\n    // Ajuste para garantir cores escuras o suficiente para texto branco\r\n    const r = parseInt(color.substring(1, 3), 16);\r\n    const g = parseInt(color.substring(3, 5), 16);\r\n    const b = parseInt(color.substring(5, 7), 16);\r\n    \r\n    // Calcula o brilho (luminância)\r\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n    \r\n    if (luminance > 0.5) {\r\n        return `hsl(${hash % 360}, 60%, 30%)`; // Cor escura\r\n    }\r\n    return color; // Cor original\r\n};\r\n\r\n// Lógica para obter as iniciais\r\nexport const getInitials = (sender) => {\r\n    const parts = sender.toUpperCase().trim().split(/\\s+/);\r\n    \r\n    if (parts.length === 1) {\r\n        return parts[0].substring(0, 2); \r\n    }\r\n    return parts[0][0] + parts[parts.length - 1][0];\r\n};\r\n\r\n// Agrupa mensagens por data (Hoje, Ontem, ou data formatada)\r\nexport const groupByDate = (msgs) => {\r\n    const grouped = {};\r\n    const today = new Date().toDateString();\r\n    const yesterday = new Date(Date.now() - 86400000).toDateString(); \r\n\r\n    msgs.forEach((msg) => {\r\n        const msgDate = new Date(msg.timestamp).toDateString();\r\n        let label;\r\n        if (msgDate === today) {\r\n            label = 'Hoje';\r\n        } else if (msgDate === yesterday) {\r\n            label = 'Ontem';\r\n        } else {\r\n            label = new Date(msg.timestamp).toLocaleDateString('pt-BR', { day: 'numeric', month: 'short' });\r\n        }\r\n        if (!grouped[label]) {\r\n            grouped[label] = [];\r\n        }\r\n        grouped[label].push(msg);\r\n    });\r\n    return grouped;\r\n};\r\n// -----------------------------------------------------------------\r\n\r\nconst Chat = () => {\r\n    const [content, setContent] = useState('');\r\n    const [type, setType] = useState('text');\r\n    const [file, setFile] = useState(null);\r\n    const [charCount, setCharCount] = useState(0);\r\n    const [isSending, setIsSending] = useState(false);\r\n    \r\n    const messagesEndRef = useRef(null);\r\n    const messagesListRef = useRef(null);\r\n    const inputRef = useRef(null); // CRÍTICO: Nova referência para o input\r\n    \r\n    const { user, messages, preview, setPreview, logout, resetPreview, addMessageLocally, handleResetChat } = useContext(AppContext);\r\n\r\n    const maxChars = 200;\r\n\r\n    // Atualiza contador de caracteres\r\n    useEffect(() => {\r\n        setCharCount(content.length);\r\n    }, [content]);\r\n\r\n    // Scroll automático para a última mensagem (SÓ SE O USUÁRIO ESTAVA PERTO DO FIM - POLIMENTO)\r\n    useEffect(() => {\r\n        const messagesList = messagesListRef.current;\r\n        if (messagesList) {\r\n            const { scrollTop, scrollHeight, clientHeight } = messagesList;\r\n            \r\n            if (scrollTop + clientHeight >= scrollHeight - 100) { \r\n                messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }, [messages]);\r\n\r\n    // Formata timestamp para exibição (só hora:minuto)\r\n    const formatTimestamp = (timestamp) => {\r\n        return new Date(timestamp).toLocaleString('pt-BR', {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    // Renderiza o conteúdo da mensagem (texto, imagem ou áudio)\r\n    const renderContent = (msg) => {\r\n        switch (msg.type) {\r\n            case 'text':\r\n                return <span className=\"message-text\">{msg.content}</span>;\r\n            case 'image':\r\n                return <img src={msg.content} alt=\"Imagem enviada\" style={{ maxWidth: '100%', height: 'auto' }} />;\r\n            case 'audio':\r\n                return <audio controls src={msg.content} style={{ width: '100%' }} />;\r\n            default:\r\n                return <span>Tipo de mensagem não suportado</span>;\r\n        }\r\n    };\r\n\r\n    // Manipula seleção de arquivo com preview e validação\r\n    const handleFileChange = async (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        if (selectedFile) {\r\n            const allowedTypes = ['image/jpeg', 'image/png', 'audio/mpeg', 'audio/wav'];\r\n            if (!allowedTypes.includes(selectedFile.type)) {\r\n                alert('Apenas imagens (jpg/png) ou áudio (mp3/wav) são permitidos.');\r\n                e.target.value = ''; \r\n                return;\r\n            }\r\n\r\n            const previewUrl = URL.createObjectURL(selectedFile);\r\n            setPreview(previewUrl);\r\n            setType(selectedFile.type.startsWith('image/') ? 'image' : 'audio');\r\n            setFile(selectedFile);\r\n        }\r\n    };\r\n\r\n    // Cancela preview de arquivo\r\n    const handleCancelPreview = () => {\r\n        if (preview) {\r\n            URL.revokeObjectURL(preview); // Libera memória\r\n        }\r\n        setPreview(null);\r\n        setFile(null);\r\n        setType('text');\r\n        setContent(''); \r\n        inputRef.current?.focus(); // CRÍTICO: FOCA após cancelar preview\r\n    };\r\n\r\n    // Envia mensagem (texto ou arquivo)\r\n    const handleSend = async () => {\r\n        if ((!content.trim() && !file) || charCount > maxChars) {\r\n            alert('Mensagem inválida ou excede o limite de caracteres.');\r\n            return;\r\n        }\r\n\r\n        setIsSending(true); // LIGA O SPINNER\r\n\r\n        try {\r\n            let messageContent = content.trim();\r\n            let messageType = type; \r\n\r\n            if (file) {\r\n                const uploadResult = await api.uploadFile(file);\r\n                messageContent = uploadResult.url;\r\n                URL.revokeObjectURL(preview); \r\n                setFile(null);\r\n            }\r\n            \r\n            const messageToSend = {\r\n                content: messageContent,\r\n                sender: user,\r\n                type: messageType,\r\n                timestamp: new Date().toISOString(),\r\n            };\r\n\r\n            const sentMessage = await api.sendMessage(messageToSend); \r\n            \r\n            // 1. Adiciona a mensagem localmente (Garante visibilidade imediata)\r\n            addMessageLocally(sentMessage); \r\n            \r\n            // 2. Reseta estados\r\n            setContent('');\r\n            setType('text');\r\n            resetPreview(); \r\n\r\n            // CRÍTICO: FORÇA O FOCO DE VOLTA PARA O INPUT\r\n            inputRef.current?.focus(); \r\n\r\n            // CRÍTICO: FORÇA O SCROLL AQUI APÓS O UPDATE LOCAL\r\n            messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n            \r\n        } catch (error) {\r\n            console.error('Erro ao enviar mensagem:', error);\r\n            alert('Erro ao enviar mensagem. Tente novamente.');\r\n            inputRef.current?.focus(); // Tenta focar mesmo em caso de erro\r\n        } finally {\r\n            setIsSending(false); // DESLIGA O SPINNER\r\n        }\r\n    };\r\n\r\n    // Envio com Enter\r\n    const handleKeyPress = (e) => {\r\n        // Desabilita se estiver carregando\r\n        if (!isSending && e.key === 'Enter' && !e.shiftKey) { \r\n            e.preventDefault(); \r\n            handleSend(); \r\n        }\r\n    };\r\n\r\n    // Agrupa as mensagens\r\n    const groupedMessages = groupByDate(messages);\r\n\r\n    // JSX principal do componente\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {/* Header do chat */}\r\n            <header className=\"chat-header\">\r\n                <h2>Chat - Bem-vindo, {user}!</h2>\r\n                \r\n                {/* Agrupamento dos botões para alinhamento */}\r\n                <div className=\"header-buttons\">\r\n                    {/* Botão Limpar Chat */}\r\n                    <button \r\n                        onClick={handleResetChat} \r\n                        aria-label=\"Limpar histórico de mensagens\" \r\n                        className=\"reset-btn\"\r\n                        style={{ backgroundColor: '#dc3545', color: 'white' }} \r\n                        disabled={isSending} // DESABILITA DURANTE O ENVIO\r\n                    >\r\n                        Limpar Chat\r\n                    </button>\r\n                    \r\n                    {/* Botão Sair */}\r\n                    <button onClick={logout} aria-label=\"Sair do chat\" disabled={isSending}>\r\n                        Sair\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Lista de mensagens */}\r\n            <div ref={messagesListRef} className=\"messages-list\">\r\n                {Object.entries(groupedMessages).length > 0 ? (\r\n                    Object.entries(groupedMessages).map(([date, msgs]) => (\r\n                        <div key={date}>\r\n                            <div className=\"date-group\">{date}</div>\r\n                            {msgs.map((msg) => (\r\n                                <div\r\n                                    key={msg.id}\r\n                                    className={`avatar-wrapper ${msg.sender === user ? 'sent-wrapper' : 'received-wrapper'}`}\r\n                                >\r\n                                    {/* Avatar é exibido APENAS para mensagens recebidas */}\r\n                                    {msg.sender !== user && (\r\n                                        <div \r\n                                            className=\"avatar\"\r\n                                            style={{ backgroundColor: stringToColor(msg.sender) }}\r\n                                        >\r\n                                            {getInitials(msg.sender)}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div\r\n                                        className={`message ${msg.sender === user ? 'sent' : 'received'}`}\r\n                                    >\r\n                                        <div className=\"message-header\">\r\n                                            <strong>{msg.sender}</strong> - {formatTimestamp(msg.timestamp)}\r\n                                        </div>\r\n                                        <div className=\"message-content\">\r\n                                            {renderContent(msg)}\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    {/* Avatar é exibido para mensagens enviadas, alinhado à direita */}\r\n                                    {msg.sender === user && (\r\n                                        <div \r\n                                            className=\"avatar sent-avatar\"\r\n                                            style={{ backgroundColor: stringToColor(msg.sender) }}\r\n                                        >\r\n                                            {getInitials(msg.sender)}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p style={{ textAlign: 'center', color: '#666', padding: '20px' }}>\r\n                        Nenhuma mensagem ainda. Envie a primeira!\r\n                    </p>\r\n                )}\r\n                <div ref={messagesEndRef} /> {/* Âncora para scroll */}\r\n            </div>\r\n\r\n            {/* Formulário de envio */}\r\n            <form className=\"send-form\" onSubmit={(e) => { e.preventDefault(); handleSend(); }}>\r\n                <textarea\r\n                    ref={inputRef} // CRÍTICO: Anexando a referência aqui\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    onKeyDown={handleKeyPress} \r\n                    className=\"text-input\"\r\n                    placeholder=\"Digite sua mensagem... (máx. 200 caracteres)\"\r\n                    maxLength={maxChars}\r\n                    aria-label=\"Campo para digitar mensagem de texto\"\r\n                    disabled={!!file || isSending} // DESABILITA DURANTE O ENVIO\r\n                    rows={3}\r\n                />\r\n                <div className=\"char-counter\">\r\n                    {charCount}/{maxChars} {charCount > maxChars / 2 && '(metade excedida)'}\r\n                </div>\r\n\r\n                {/* Input de arquivo */}\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/jpeg,image/png,audio/mpeg,audio/wav\"\r\n                    onChange={handleFileChange}\r\n                    className=\"file-input\"\r\n                    aria-label=\"Selecionar imagem ou áudio para enviar\"\r\n                    disabled={isSending} // DESABILITA DURANTE O ENVIO\r\n                />\r\n\r\n                {/* Preview de arquivo (se selecionado) */}\r\n                {preview && (\r\n                    <div className=\"preview\">\r\n                        {type === 'image' ? (\r\n                            <img src={preview} alt=\"Preview da imagem\" />\r\n                        ) : (\r\n                            <audio controls src={preview} />\r\n                        )}\r\n                        <br />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleCancelPreview}\r\n                            className=\"send-btn\"\r\n                            style={{ backgroundColor: '#dc3545', marginTop: '5px' }}\r\n                            aria-label=\"Cancelar envio do arquivo\"\r\n                            disabled={isSending} // DESABILITA DURANTE O ENVIO\r\n                        >\r\n                            Cancelar Arquivo\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Botão de enviar */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"send-btn\"\r\n                    disabled={(!content.trim() && !file) || isSending} // DESABILITA SE ESTIVER CARREGANDO OU VAZIO\r\n                    aria-label=\"Enviar mensagem ou arquivo\"\r\n                >\r\n                    {isSending ? (\r\n                        <div className=\"spinner\"></div> // SPINNER SVG/CSS AQUI\r\n                    ) : (\r\n                        'Enviar'\r\n                    )}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}