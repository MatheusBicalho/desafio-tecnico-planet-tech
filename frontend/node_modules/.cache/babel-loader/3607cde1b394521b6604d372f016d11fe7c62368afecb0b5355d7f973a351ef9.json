{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\planet-tech-chat\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport * as api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [content, setContent] = useState('');\n  const [type, setType] = useState('text');\n  const [file, setFile] = useState(null);\n  const [charCount, setCharCount] = useState(0);\n  const messagesEndRef = useRef(null);\n  const messagesListRef = useRef(null);\n  const {\n    user,\n    messages,\n    preview,\n    setPreview,\n    logout,\n    resetPreview,\n    addMessageLocally,\n    handleResetChat\n  } = useContext(AppContext);\n  const maxChars = 200;\n\n  // Atualiza contador de caracteres\n  useEffect(() => {\n    setCharCount(content.length);\n  }, [content]);\n\n  // Scroll automático para a última mensagem (SÓ SE O USUÁRIO ESTAVA PERTO DO FIM - POLIMENTO)\n  useEffect(() => {\n    const messagesList = messagesListRef.current;\n    if (messagesList) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = messagesList;\n\n      // Condição de rolagem: se estava nos últimos 100px do chat\n      if (scrollTop + clientHeight >= scrollHeight - 100) {\n        var _messagesEndRef$curre;\n        (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [messages]);\n\n  // Lógica para gerar uma cor determinística a partir de uma string (nome)\n  const stringToColor = str => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n      const value = hash >> i * 8 & 0xFF;\n      color += ('00' + value.toString(16)).substr(-2);\n    }\n    // Ajuste para garantir cores escuras o suficiente para texto branco\n    const r = parseInt(color.substring(1, 3), 16);\n    const g = parseInt(color.substring(3, 5), 16);\n    const b = parseInt(color.substring(5, 7), 16);\n\n    // Calcula o brilho (luminância)\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\n    // Se a cor for muito clara, inverte ou escurece.\n    if (luminance > 0.5) {\n      return `hsl(${hash % 360}, 60%, 30%)`; // Cor escura\n    }\n    return color; // Cor original\n  };\n\n  // Lógica para obter as iniciais\n  const getInitials = sender => {\n    // Divide por espaço e pega a primeira letra de cada parte\n    const parts = sender.toUpperCase().trim().split(/\\s+/);\n    if (parts.length === 1) {\n      return parts[0].substring(0, 2); // Pega as 2 primeiras letras se for uma palavra\n    }\n    // Pega a primeira letra da primeira e da última palavra\n    return parts[0][0] + parts[parts.length - 1][0];\n  };\n\n  // Agrupa mensagens por data (Hoje, Ontem, ou data formatada)\n  const groupByDate = msgs => {\n    const grouped = {};\n    const today = new Date().toDateString();\n    const yesterday = new Date(Date.now() - 86400000).toDateString();\n    msgs.forEach(msg => {\n      const msgDate = new Date(msg.timestamp).toDateString();\n      let label;\n      if (msgDate === today) {\n        label = 'Hoje';\n      } else if (msgDate === yesterday) {\n        label = 'Ontem';\n      } else {\n        label = new Date(msg.timestamp).toLocaleDateString('pt-BR', {\n          day: 'numeric',\n          month: 'short'\n        });\n      }\n      if (!grouped[label]) {\n        grouped[label] = [];\n      }\n      grouped[label].push(msg);\n    });\n    return grouped;\n  };\n\n  // Formata timestamp para exibição (só hora:minuto)\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Renderiza o conteúdo da mensagem (texto, imagem ou áudio)\n  const renderContent = msg => {\n    switch (msg.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.content,\n          alt: \"Imagem enviada\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n      case 'audio':\n        return /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: msg.content,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tipo de mensagem n\\xE3o suportado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Manipula seleção de arquivo com preview e validação\n  const handleFileChange = async e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Validação de tipos permitidos\n      const allowedTypes = ['image/jpeg', 'image/png', 'audio/mpeg', 'audio/wav'];\n      if (!allowedTypes.includes(selectedFile.type)) {\n        alert('Apenas imagens (jpg/png) ou áudio (mp3/wav) são permitidos.');\n        e.target.value = '';\n        return;\n      }\n\n      // Cria preview\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n      setType(selectedFile.type.startsWith('image/') ? 'image' : 'audio');\n      setFile(selectedFile);\n    }\n  };\n\n  // Cancela preview de arquivo\n  const handleCancelPreview = () => {\n    if (preview) {\n      URL.revokeObjectURL(preview); // Libera memória\n    }\n    setPreview(null);\n    setFile(null);\n    setType('text');\n    setContent('');\n  };\n\n  // Envia mensagem (texto ou arquivo)\n  const handleSend = async () => {\n    if (!content.trim() && !file || charCount > maxChars) {\n      alert('Mensagem inválida ou excede o limite de caracteres.');\n      return;\n    }\n    try {\n      var _messagesEndRef$curre2;\n      let messageContent = content.trim();\n      let messageType = type;\n      if (file) {\n        const uploadResult = await api.uploadFile(file);\n        messageContent = uploadResult.url;\n        URL.revokeObjectURL(preview);\n        setFile(null);\n      }\n      const messageToSend = {\n        content: messageContent,\n        sender: user,\n        type: messageType,\n        timestamp: new Date().toISOString()\n      };\n      const sentMessage = await api.sendMessage(messageToSend);\n\n      // 1. Adiciona a mensagem localmente (Garante visibilidade imediata)\n      addMessageLocally(sentMessage);\n\n      // 2. Reseta estados\n      setContent('');\n      setType('text');\n      resetPreview();\n\n      // CRÍTICO: FORÇA O SCROLL AQUI APÓS O UPDATE LOCAL\n      (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      console.error('Erro ao enviar mensagem:', error);\n      alert('Erro ao enviar mensagem. Tente novamente.');\n    }\n  };\n\n  // Envio com Enter\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // Agrupa as mensagens\n  const groupedMessages = groupByDate(messages);\n\n  // JSX principal do componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Chat - Bem-vindo, \", user, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetChat,\n          \"aria-label\": \"Limpar hist\\xF3rico de mensagens\",\n          className: \"reset-btn\",\n          style: {\n            backgroundColor: '#dc3545',\n            color: 'white'\n          },\n          children: \"Limpar Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          \"aria-label\": \"Sair do chat\",\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesListRef,\n      className: \"messages-list\",\n      children: [Object.entries(groupedMessages).length > 0 ? Object.entries(groupedMessages).map(([date, msgs]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-group\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), msgs.map(msg =>\n        /*#__PURE__*/\n        // ADICIONADO: avatar-wrapper para conter o avatar e a mensagem\n        _jsxDEV(\"div\", {\n          className: `avatar-wrapper ${msg.sender === user ? 'sent-wrapper' : 'received-wrapper'}`,\n          children: [msg.sender !== user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            style: {\n              backgroundColor: stringToColor(msg.sender)\n            },\n            children: getInitials(msg.sender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === user ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: msg.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this), \" - \", formatTimestamp(msg.timestamp)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: renderContent(msg)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this), msg.sender === user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar sent-avatar\",\n            style: {\n              backgroundColor: stringToColor(msg.sender)\n            },\n            children: getInitials(msg.sender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this))]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#666',\n          padding: '20px'\n        },\n        children: \"Nenhuma mensagem ainda. Envie a primeira!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"send-form\",\n      onSubmit: e => {\n        e.preventDefault();\n        handleSend();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        onKeyDown: handleKeyPress,\n        className: \"text-input\",\n        placeholder: \"Digite sua mensagem... (m\\xE1x. 200 caracteres)\",\n        maxLength: maxChars,\n        \"aria-label\": \"Campo para digitar mensagem de texto\",\n        disabled: !!file,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char-counter\",\n        children: [charCount, \"/\", maxChars, \" \", charCount > maxChars / 2 && '(metade excedida)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg,image/png,audio/mpeg,audio/wav\",\n        onChange: handleFileChange,\n        className: \"file-input\",\n        \"aria-label\": \"Selecionar imagem ou \\xE1udio para enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: [type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Preview da imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: preview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelPreview,\n          className: \"send-btn\",\n          style: {\n            backgroundColor: '#dc3545',\n            marginTop: '5px'\n          },\n          \"aria-label\": \"Cancelar envio do arquivo\",\n          children: \"Cancelar Arquivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-btn\",\n        disabled: !content.trim() && !file,\n        \"aria-label\": \"Enviar mensagem ou arquivo\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"tjSvHN9nJqTyy6Q6JJ8si+vkJe0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","AppContext","api","jsxDEV","_jsxDEV","Chat","_s","content","setContent","type","setType","file","setFile","charCount","setCharCount","messagesEndRef","messagesListRef","user","messages","preview","setPreview","logout","resetPreview","addMessageLocally","handleResetChat","maxChars","length","messagesList","current","scrollTop","scrollHeight","clientHeight","_messagesEndRef$curre","scrollIntoView","behavior","stringToColor","str","hash","i","charCodeAt","color","value","toString","substr","r","parseInt","substring","g","b","luminance","getInitials","sender","parts","toUpperCase","trim","split","groupByDate","msgs","grouped","today","Date","toDateString","yesterday","now","forEach","msg","msgDate","timestamp","label","toLocaleDateString","day","month","push","formatTimestamp","toLocaleString","hour","minute","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","height","controls","width","handleFileChange","e","selectedFile","target","files","allowedTypes","includes","alert","previewUrl","URL","createObjectURL","startsWith","handleCancelPreview","revokeObjectURL","handleSend","_messagesEndRef$curre2","messageContent","messageType","uploadResult","uploadFile","url","messageToSend","toISOString","sentMessage","sendMessage","error","console","handleKeyPress","key","shiftKey","preventDefault","groupedMessages","onClick","backgroundColor","ref","Object","entries","map","date","id","textAlign","padding","onSubmit","onChange","onKeyDown","placeholder","maxLength","disabled","rows","accept","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/mathe/planet-tech-chat/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { AppContext } from '../context/AppContext';\r\nimport * as api from '../services/api';\r\n\r\nconst Chat = () => {\r\n  const [content, setContent] = useState('');\r\n  const [type, setType] = useState('text');\r\n  const [file, setFile] = useState(null);\r\n  const [charCount, setCharCount] = useState(0);\r\n  const messagesEndRef = useRef(null);\r\n  const messagesListRef = useRef(null);\r\n  \r\n  const { user, messages, preview, setPreview, logout, resetPreview, addMessageLocally, handleResetChat } = useContext(AppContext);\r\n\r\n  const maxChars = 200;\r\n\r\n  // Atualiza contador de caracteres\r\n  useEffect(() => {\r\n    setCharCount(content.length);\r\n  }, [content]);\r\n\r\n  // Scroll automático para a última mensagem (SÓ SE O USUÁRIO ESTAVA PERTO DO FIM - POLIMENTO)\r\n  useEffect(() => {\r\n    const messagesList = messagesListRef.current;\r\n    if (messagesList) {\r\n      const { scrollTop, scrollHeight, clientHeight } = messagesList;\r\n      \r\n      // Condição de rolagem: se estava nos últimos 100px do chat\r\n      if (scrollTop + clientHeight >= scrollHeight - 100) { \r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n  }, [messages]);\r\n\r\n  // Lógica para gerar uma cor determinística a partir de uma string (nome)\r\n  const stringToColor = (str) => {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    let color = '#';\r\n    for (let i = 0; i < 3; i++) {\r\n      const value = (hash >> (i * 8)) & 0xFF;\r\n      color += ('00' + value.toString(16)).substr(-2);\r\n    }\r\n    // Ajuste para garantir cores escuras o suficiente para texto branco\r\n    const r = parseInt(color.substring(1, 3), 16);\r\n    const g = parseInt(color.substring(3, 5), 16);\r\n    const b = parseInt(color.substring(5, 7), 16);\r\n    \r\n    // Calcula o brilho (luminância)\r\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n    \r\n    // Se a cor for muito clara, inverte ou escurece.\r\n    if (luminance > 0.5) {\r\n        return `hsl(${hash % 360}, 60%, 30%)`; // Cor escura\r\n    }\r\n    return color; // Cor original\r\n  };\r\n\r\n  // Lógica para obter as iniciais\r\n  const getInitials = (sender) => {\r\n      // Divide por espaço e pega a primeira letra de cada parte\r\n      const parts = sender.toUpperCase().trim().split(/\\s+/);\r\n      \r\n      if (parts.length === 1) {\r\n          return parts[0].substring(0, 2); // Pega as 2 primeiras letras se for uma palavra\r\n      }\r\n      // Pega a primeira letra da primeira e da última palavra\r\n      return parts[0][0] + parts[parts.length - 1][0];\r\n  };\r\n\r\n  // Agrupa mensagens por data (Hoje, Ontem, ou data formatada)\r\n  const groupByDate = (msgs) => {\r\n    const grouped = {};\r\n    const today = new Date().toDateString();\r\n    const yesterday = new Date(Date.now() - 86400000).toDateString(); \r\n\r\n    msgs.forEach((msg) => {\r\n      const msgDate = new Date(msg.timestamp).toDateString();\r\n      let label;\r\n      if (msgDate === today) {\r\n        label = 'Hoje';\r\n      } else if (msgDate === yesterday) {\r\n        label = 'Ontem';\r\n      } else {\r\n        label = new Date(msg.timestamp).toLocaleDateString('pt-BR', { day: 'numeric', month: 'short' });\r\n      }\r\n      if (!grouped[label]) {\r\n        grouped[label] = [];\r\n      }\r\n      grouped[label].push(msg);\r\n    });\r\n    return grouped;\r\n  };\r\n\r\n  // Formata timestamp para exibição (só hora:minuto)\r\n  const formatTimestamp = (timestamp) => {\r\n    return new Date(timestamp).toLocaleString('pt-BR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Renderiza o conteúdo da mensagem (texto, imagem ou áudio)\r\n  const renderContent = (msg) => {\r\n    switch (msg.type) {\r\n      case 'text':\r\n        return <span className=\"message-text\">{msg.content}</span>;\r\n      case 'image':\r\n        return <img src={msg.content} alt=\"Imagem enviada\" style={{ maxWidth: '100%', height: 'auto' }} />;\r\n      case 'audio':\r\n        return <audio controls src={msg.content} style={{ width: '100%' }} />;\r\n      default:\r\n        return <span>Tipo de mensagem não suportado</span>;\r\n    }\r\n  };\r\n\r\n  // Manipula seleção de arquivo com preview e validação\r\n  const handleFileChange = async (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      // Validação de tipos permitidos\r\n      const allowedTypes = ['image/jpeg', 'image/png', 'audio/mpeg', 'audio/wav'];\r\n      if (!allowedTypes.includes(selectedFile.type)) {\r\n        alert('Apenas imagens (jpg/png) ou áudio (mp3/wav) são permitidos.');\r\n        e.target.value = ''; \r\n        return;\r\n      }\r\n\r\n      // Cria preview\r\n      const previewUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(previewUrl);\r\n      setType(selectedFile.type.startsWith('image/') ? 'image' : 'audio');\r\n      setFile(selectedFile);\r\n    }\r\n  };\r\n\r\n  // Cancela preview de arquivo\r\n  const handleCancelPreview = () => {\r\n    if (preview) {\r\n      URL.revokeObjectURL(preview); // Libera memória\r\n    }\r\n    setPreview(null);\r\n    setFile(null);\r\n    setType('text');\r\n    setContent(''); \r\n  };\r\n\r\n  // Envia mensagem (texto ou arquivo)\r\n  const handleSend = async () => {\r\n    if ((!content.trim() && !file) || charCount > maxChars) {\r\n      alert('Mensagem inválida ou excede o limite de caracteres.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let messageContent = content.trim();\r\n      let messageType = type; \r\n\r\n      if (file) {\r\n        const uploadResult = await api.uploadFile(file);\r\n        messageContent = uploadResult.url;\r\n        URL.revokeObjectURL(preview); \r\n        setFile(null);\r\n      }\r\n      \r\n      const messageToSend = {\r\n          content: messageContent,\r\n          sender: user,\r\n          type: messageType,\r\n          timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      const sentMessage = await api.sendMessage(messageToSend); \r\n      \r\n      // 1. Adiciona a mensagem localmente (Garante visibilidade imediata)\r\n      addMessageLocally(sentMessage); \r\n      \r\n      // 2. Reseta estados\r\n      setContent('');\r\n      setType('text');\r\n      resetPreview(); \r\n\r\n      // CRÍTICO: FORÇA O SCROLL AQUI APÓS O UPDATE LOCAL\r\n      messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao enviar mensagem:', error);\r\n      alert('Erro ao enviar mensagem. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  // Envio com Enter\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault(); \r\n      handleSend(); \r\n    }\r\n  };\r\n\r\n  // Agrupa as mensagens\r\n  const groupedMessages = groupByDate(messages);\r\n\r\n  // JSX principal do componente\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Header do chat */}\r\n      <header className=\"chat-header\">\r\n        <h2>Chat - Bem-vindo, {user}!</h2>\r\n        \r\n        {/* Agrupamento dos botões para alinhamento */}\r\n        <div className=\"header-buttons\">\r\n          {/* Botão Limpar Chat */}\r\n          <button \r\n            onClick={handleResetChat} \r\n            aria-label=\"Limpar histórico de mensagens\" \r\n            className=\"reset-btn\"\r\n            style={{ backgroundColor: '#dc3545', color: 'white' }} \r\n          >\r\n            Limpar Chat\r\n          </button>\r\n          \r\n          {/* Botão Sair */}\r\n          <button onClick={logout} aria-label=\"Sair do chat\">\r\n            Sair\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Lista de mensagens */}\r\n      <div ref={messagesListRef} className=\"messages-list\">\r\n        {Object.entries(groupedMessages).length > 0 ? (\r\n          Object.entries(groupedMessages).map(([date, msgs]) => (\r\n            <div key={date}>\r\n              <div className=\"date-group\">{date}</div>\r\n              {msgs.map((msg) => (\r\n                // ADICIONADO: avatar-wrapper para conter o avatar e a mensagem\r\n                <div\r\n                  key={msg.id}\r\n                  className={`avatar-wrapper ${msg.sender === user ? 'sent-wrapper' : 'received-wrapper'}`}\r\n                >\r\n                  {/* Avatar é exibido APENAS para mensagens recebidas (ou use 'avatar' para ambos se preferir) */}\r\n                  {msg.sender !== user && (\r\n                    <div \r\n                        className=\"avatar\"\r\n                        style={{ backgroundColor: stringToColor(msg.sender) }}\r\n                    >\r\n                        {getInitials(msg.sender)}\r\n                    </div>\r\n                  )}\r\n\r\n                  <div\r\n                    className={`message ${msg.sender === user ? 'sent' : 'received'}`}\r\n                  >\r\n                    <div className=\"message-header\">\r\n                      <strong>{msg.sender}</strong> - {formatTimestamp(msg.timestamp)}\r\n                    </div>\r\n                    <div className=\"message-content\">\r\n                      {renderContent(msg)}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Avatar é exibido para mensagens enviadas, alinhado à direita */}\r\n                  {msg.sender === user && (\r\n                    <div \r\n                        className=\"avatar sent-avatar\"\r\n                        style={{ backgroundColor: stringToColor(msg.sender) }}\r\n                    >\r\n                        {getInitials(msg.sender)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: 'center', color: '#666', padding: '20px' }}>\r\n            Nenhuma mensagem ainda. Envie a primeira!\r\n          </p>\r\n        )}\r\n        <div ref={messagesEndRef} /> {/* Âncora para scroll */}\r\n      </div>\r\n\r\n      {/* Formulário de envio */}\r\n      <form className=\"send-form\" onSubmit={(e) => { e.preventDefault(); handleSend(); }}>\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          onKeyDown={handleKeyPress} \r\n          className=\"text-input\"\r\n          placeholder=\"Digite sua mensagem... (máx. 200 caracteres)\"\r\n          maxLength={maxChars}\r\n          aria-label=\"Campo para digitar mensagem de texto\"\r\n          disabled={!!file} \r\n          rows={3}\r\n        />\r\n        <div className=\"char-counter\">\r\n          {charCount}/{maxChars} {charCount > maxChars / 2 && '(metade excedida)'}\r\n        </div>\r\n\r\n        {/* Input de arquivo */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/jpeg,image/png,audio/mpeg,audio/wav\"\r\n          onChange={handleFileChange}\r\n          className=\"file-input\"\r\n          aria-label=\"Selecionar imagem ou áudio para enviar\"\r\n        />\r\n\r\n        {/* Preview de arquivo (se selecionado) */}\r\n        {preview && (\r\n          <div className=\"preview\">\r\n            {type === 'image' ? (\r\n              <img src={preview} alt=\"Preview da imagem\" />\r\n            ) : (\r\n              <audio controls src={preview} />\r\n            )}\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCancelPreview}\r\n              className=\"send-btn\"\r\n              style={{ backgroundColor: '#dc3545', marginTop: '5px' }}\r\n              aria-label=\"Cancelar envio do arquivo\"\r\n            >\r\n              Cancelar Arquivo\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Botão de enviar */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"send-btn\"\r\n          disabled={!content.trim() && !file}\r\n          aria-label=\"Enviar mensagem ou arquivo\"\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}