{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\planet-tech-chat\\\\frontend\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport * as api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [preview, setPreview] = useState(null);\n\n  // Poll mensagens a cada 5s\n  useEffect(() => {\n    if (user) {\n      const fetchMessages = async () => {\n        const data = await api.getMessages();\n        setMessages(data);\n      };\n      fetchMessages();\n      const interval = setInterval(fetchMessages, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [user]);\n  const login = username => setUser(username);\n  const logout = () => setUser(null);\n  const value = {\n    user,\n    messages,\n    preview,\n    setPreview,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(AppProvider, \"Q9TdBvdVwrOTTEjkB4Bag3iwNkk=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","user","setUser","messages","setMessages","preview","setPreview","fetchMessages","data","getMessages","interval","setInterval","clearInterval","login","username","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mathe/planet-tech-chat/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport * as api from '../services/api';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  // Poll mensagens a cada 5s\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchMessages = async () => {\r\n        const data = await api.getMessages();\r\n        setMessages(data);\r\n      };\r\n      fetchMessages();\r\n      const interval = setInterval(fetchMessages, 5000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [user]);\r\n\r\n  const login = (username) => setUser(username);\r\n  const logout = () => setUser(null);\r\n\r\n  const value = {\r\n    user,\r\n    messages,\r\n    preview,\r\n    setPreview,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACR,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,MAAMC,IAAI,GAAG,MAAMd,GAAG,CAACe,WAAW,CAAC,CAAC;QACpCL,WAAW,CAACI,IAAI,CAAC;MACnB,CAAC;MACDD,aAAa,CAAC,CAAC;MACf,MAAMG,QAAQ,GAAGC,WAAW,CAACJ,aAAa,EAAE,IAAI,CAAC;MACjD,OAAO,MAAMK,aAAa,CAACF,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMY,KAAK,GAAIC,QAAQ,IAAKZ,OAAO,CAACY,QAAQ,CAAC;EAC7C,MAAMC,MAAM,GAAGA,CAAA,KAAMb,OAAO,CAAC,IAAI,CAAC;EAElC,MAAMc,KAAK,GAAG;IACZf,IAAI;IACJE,QAAQ;IACRE,OAAO;IACPC,UAAU;IACVO,KAAK;IACLE;EACF,CAAC;EAED,oBAAOnB,OAAA,CAACC,UAAU,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC5E,CAAC;AAACrB,EAAA,CA/BWF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}